{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,UAAU;;;;;;;;;;;;;;;ACvG0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa,MAAM,YAAY;AACzD,iDAAiD,WAAW;AAC5D,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kCAAkC;AACnE;AACA,aAAa;AACb,UAAU;AACV,GAAG,+DAAW;AACd;AACA,yBAAyB,kCAAkC;AAC3D;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;AC7D+B;AACJ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;AACA;AACA,6CAA6C;AAC7C;AACA,UAAU;AACV;AACA,UAAU;AACV,0BAA0B;AAC1B,UAAU;AACV;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sDAAU;AACnB,OAAO;AACP;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;;AC9EnB;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC;AACJ;;;;;;;;;;;;;;;ACxDrB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,mCAAmC,KAAK;AACxC,QAAQ;AACR;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,8BAA8B,cAAc;AAC5C,gCAAgC,WAAW;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACrHrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,iDAAiD;AACjD,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,gDAAgD;AAChD,oDAAoD;AACpD,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,IAAI;AACJ;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;AC1CpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI;AACxB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC9DpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,IAAI,YAAY,WAAW;AACpE;AACA;AACA;AACA;AACoB;;;;;;;UCrBpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACb;AAC8C;AACV;AACQ;AACN;AACJ;AACE;AACF;AACc;AAChD;AACA;AACA;AACA,yCAAyC,6DAAS;AAClD;AACA,GAAG,yDAAI;AACP,GAAG,0DAAK;AACR,GAAG,0DAAK;AACR,GAAG,8DAAS;AACZ,GAAG,+DAAU;AACb,GAAG,2DAAM;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG,yDAAI;AACP;AACA,CAAC","sources":["webpack://project110523/./js/modules/calculator.js","webpack://project110523/./js/modules/cards.js","webpack://project110523/./js/modules/form.js","webpack://project110523/./js/modules/modalwind.js","webpack://project110523/./js/modules/slider.js","webpack://project110523/./js/modules/tabs.js","webpack://project110523/./js/modules/timer.js","webpack://project110523/./js/services/services.js","webpack://project110523/webpack/bootstrap","webpack://project110523/webpack/runtime/define property getters","webpack://project110523/webpack/runtime/hasOwnProperty shorthand","webpack://project110523/webpack/runtime/make namespace object","webpack://project110523/./js/script.js"],"sourcesContent":["function calculator() {\r\n\r\n   // Калькулятор калорий\r\n   const result = document.querySelector('.calculating__result span');\r\n   let sex, height, weight, age, ratio;\r\n   // устанавливаем начальное значение пол и активность\r\n   if (localStorage.getItem('sex')) {\r\n      sex = localStorage.getItem('sex');\r\n   } else {\r\n      sex = 'female';\r\n      localStorage.setItem('sex', 'female');\r\n   }\r\n   if (localStorage.getItem('ratio')) {\r\n      ratio = localStorage.getItem('ratio');\r\n   } else {\r\n      ratio = 1.375;\r\n      localStorage.setItem('ratio', 1.375);\r\n   }\r\n   // установка класа активности в соотвецтвии с localStorage\r\n   function initLocalSettings(selector, activeClass) {\r\n      const elements = document.querySelectorAll(selector);\r\n\r\n      elements.forEach(elem => {\r\n         elem.classList.remove(activeClass);\r\n         if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n            elem.classList.add(activeClass);\r\n         } \r\n         if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n            elem.classList.add(activeClass);\r\n         }\r\n      })\r\n   }\r\n   initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n   initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n   function calcTotal() {\r\n      if (!sex || !height || !weight || !age || !ratio) {\r\n         result.textContent = '____';\r\n         return;\r\n      }\r\n      if (sex === 'female') {\r\n         result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n      } else {\r\n         result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n      }\r\n   }\r\n   calcTotal(); \r\n   // получение статической информации пол и физ, активность\r\n   function getStaticInformation(selector, activeClass) {\r\n      const elements = document.querySelectorAll(selector);\r\n\r\n      elements.forEach(elem => {\r\n         elem.addEventListener('click', (e) => {\r\n            if (e.target.getAttribute('data-ratio')) {\r\n               ratio = e.target.getAttribute('data-ratio');\r\n               // добавим значения в localStorage\r\n               localStorage.setItem('ratio', e.target.getAttribute('data-ratio'));\r\n            } else {\r\n               sex = e.target.getAttribute('id');\r\n               localStorage.setItem('sex', e.target.getAttribute('id'));\r\n            }\r\n            // отмечаем по клику клас активности и считаем\r\n            elements.forEach(elem => {\r\n               elem.classList.remove(activeClass);\r\n            });\r\n            e.target.classList.add(activeClass);\r\n            calcTotal();\r\n         });\r\n      });\r\n   }\r\n   getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n   getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n   // принимаем значеия input\r\n   function getDynamicInformation(selector) {\r\n      const input = document.querySelector(selector);\r\n      input.addEventListener('input', () => {\r\n         // подсвечиваем красным, если вводятся не цифры\r\n         if (input.value.match(/\\D/g)) {\r\n            input.style.border = '1px solid red';\r\n         } else {\r\n            input.style.border = 'none';\r\n         }\r\n\r\n         switch (input.getAttribute('id')) {\r\n            case 'height':\r\n               height = +input.value;\r\n               break;\r\n            case 'weight':\r\n               weight = +input.value;\r\n               break;\r\n            case 'age':\r\n               age = +input.value;\r\n               break;\r\n         }\r\n         calcTotal();\r\n      });\r\n   }\r\n   getDynamicInformation('#height');\r\n   getDynamicInformation('#weight');\r\n   getDynamicInformation('#age');\r\n}\r\n\r\nexport default calculator;","import { getResource } from \"../services/services\";\r\n\r\nfunction cards() {\r\n   // Используем классы для карточек меню\r\n   class MenuCard {\r\n      constructor(srcImg, altImg, title, descr, price, parentSelector, ...classes) {\r\n         this.srcImg = srcImg;\r\n         this.altImg = altImg;\r\n         this.title = title;\r\n         this.descr = descr; \r\n         this.price = price;\r\n         this.classes = classes;\r\n         this.parent = document.querySelector(parentSelector);\r\n         this.transfer = 37; \r\n         this.changeToUAH(); \r\n      }\r\n      // метод конвертации цены в гривны\r\n      changeToUAH() {\r\n         this.price = this.transfer * this.price;\r\n      } \r\n      // метод формирующий верстку\r\n      render() {\r\n         const element = document.createElement('div');\r\n         // проверка classes, если в параметрах нет - прорисываем 'menu__item'\r\n         if (this.classes.length === 0) {\r\n            this.element = 'menu__item';\r\n            element.classList.add(this.element);\r\n         } else {\r\n            this.classes.forEach(className => element.classList.add(className));\r\n         }\r\n            \r\n         // можно убрать наружную обертку menu__item\r\n         element.innerHTML = `\r\n               <img src=${this.srcImg} alt=${this.altImg}>\r\n               <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n               <div class=\"menu__item-descr\">${this.descr}</div>\r\n               <div class=\"menu__item-divider\"></div>\r\n               <div class=\"menu__item-price\">\r\n                  <div class=\"menu__item-cost\">Цена:</div>\r\n                  <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n               </div>\r\n            `;\r\n         this.parent.append(element);\r\n      }\r\n   }\r\n   \r\n   // вариант 1 - предпочтительный с исп. классов и axios\r\n   // axios.get('http://localhost:3000/menu')\r\n   //    .then(data => {\r\n   //       data.data.forEach(({ img, altimg, title, descr, price }) => {\r\n   //          new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n   //       });\r\n   //    });\r\n   getResource('http://localhost:3000/menu')\r\n      .then(data => {\r\n         data.forEach(({ img, altimg, title, descr, price }) => {\r\n            new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n         });\r\n      });\r\n}\r\n\r\nexport default cards;\r\n","import { closeModal, openModal } from \"./modalwind\"; \r\nimport { postData } from \"../services/services\";\r\n\r\nfunction form(formSelector, modalTimerId) {\r\n   // Берем данные из форм на сайте и отправляем на сервер \r\n   const forms = document.querySelectorAll(formSelector);\r\n\r\n   const messag = {\r\n      loading: 'img/form/spinner.svg',\r\n      success: 'Спасибо! Скоро мы с вами свяжемся.',\r\n      failure: 'Что-то пошло не так...'\r\n   };\r\n   forms.forEach(item => {\r\n      bindPostData(item);\r\n   });\r\n\r\n   function bindPostData(form) {\r\n      form.addEventListener('submit', (e) => {\r\n         e.preventDefault(); // отменяем стандартное поведение браузера (перезагрузка при submit)\r\n         // добавляем в form отражение статуса запроса spinner\r\n         const statusMessage = document.createElement('img');\r\n         statusMessage.src = messag.loading;\r\n         statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n         `;\r\n         \r\n         form.insertAdjacentElement('afterend', statusMessage);\r\n               \r\n         const formData = new FormData(form); \r\n         const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n      \r\n         // вызов fetch ч-з функцию postData. отправка данных на сервер\r\n         // указывается на json-server в db.json в массив request \r\n         // это постинг данных в формате json на json-сервер\r\n         postData('http://localhost:3000/requests', json)\r\n         .then(data => {\r\n            console.log(data);\r\n            showThanksModal(messag.success); // вызов функции показа сообщения об отправке\r\n            statusMessage.remove();\r\n         }).catch(() => {\r\n            showThanksModal(messag.failure);\r\n         }).finally(() => {\r\n            form.reset(); // очищаем форму после отправки.\r\n         });\r\n\r\n      });\r\n   };\r\n   // стилизуем ч-з js модальное окно при отправке данных\r\n   function showThanksModal(message) {\r\n      const prevModalDialog = document.querySelector('.modal__dialog');\r\n      \r\n      prevModalDialog.classList.add('hide');\r\n      openModal('.modal', modalTimerId);\r\n      // конструируем модальное окно\r\n      // создаем оберку div\r\n      const thanksModal = document.createElement('div');\r\n      thanksModal.classList.add('modal__dialog');\r\n      thanksModal.innerHTML = `\r\n         <div class='modal__content'>\r\n            <div class='modal__close' data-close>×</div>\r\n            <div class=\"modal__title\">${message}</div>\r\n         </div> \r\n      `;\r\n      // помещаем на страницу в класс modal\r\n      document.querySelector('.modal').append(thanksModal);\r\n      document.querySelector('.modal').classList.add('show');\r\n      \r\n      // восстанавливаем мо через 4с и закрываем\r\n      setTimeout(() => {\r\n         thanksModal.remove();    \r\n         prevModalDialog.classList.add('show');\r\n         prevModalDialog.classList.remove('hide');\r\n         closeModal('.modal');\r\n      }, 4000);\r\n   }\r\n};\r\n\r\nexport default form;","// выводим в функцию открытия  модального окна\r\nfunction openModal(modalSelector, modalTimerId) {\r\n   const modal = document.querySelector(modalSelector);\r\n\r\n   modal.classList.toggle('show'); // вариант с использованием toggle\r\n   // восстанавливаем скрол сайта при закрытии мадольного  окна\r\n   document.body.style.overflow = 'hide';\r\n   // Если пользователь сам открыл мо - отключаем setTimeout\r\n   console.log(modalTimerId);\r\n   if (modalTimerId) {\r\n      clearTimeout(modalTimerId);   \r\n   }\r\n}\r\n// выводим в функцию закрытие модального окна\r\nfunction closeModal(modalSelector) {\r\n   const modal = document.querySelector(modalSelector);\r\n\r\n   modal.classList.toggle('show'); // вариант с использованием toggle\r\n   // восстанавливаем скрол сайта при закрытии мадольного  окна\r\n   document.body.style.overflow = '';\r\n}\r\n   \r\nfunction modalwind(triggerSelector, modalSelector, modalTimerId) {\r\n   // Модальное окно\r\n   const modalTrigger = document.querySelectorAll(triggerSelector),\r\n      modal = document.querySelector(modalSelector);\r\n   \r\n   modalTrigger.forEach(btn => {\r\n      btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n   });      \r\n   // закрытия мо при клике вне модального окна или на крестик в мо и клавише Esc\r\n   modal.addEventListener('click', (e) => {\r\n      if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n         closeModal(modalSelector);\r\n      }\r\n   });\r\n   document.addEventListener('keydown', (e) => {\r\n      if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n         closeModal(modalSelector);\r\n      }\r\n   })\r\n   // вывод мо, если пользователь прошел до конца страницы\r\n   // ---вывод мо -> в функцию\r\n   function showModalByScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight >= document.\r\n      documentElement.scrollHeight) {\r\n         openModal(modalSelector, modalTimerId);\r\n         // делаем открытие мо в конце страницы - разовым\r\n         window.removeEventListener('scroll', showModalByScroll);\r\n      }\r\n   }\r\n   window.addEventListener('scroll', showModalByScroll);\r\n\r\n}\r\n\r\nexport default modalwind;\r\nexport { openModal };\r\nexport { closeModal };","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n\r\n   // Слайдер \r\n   const slides = document.querySelectorAll(slide),\r\n      slider = document.querySelector(container),\r\n      prev = document.querySelector(prevArrow),  \r\n      next = document.querySelector(nextArrow),\r\n      total = document.querySelector(totalCounter),\r\n      current = document.querySelector(currentCounter),\r\n      slidesWrapper = document.querySelector(wrapper),\r\n      slidesField = document.querySelector(field),\r\n      width = window.getComputedStyle(slidesWrapper).width;\r\n      \r\n   let slideIndex = 1;\r\n   let offset = 0; \r\n\r\n   function showCounterSlide(curr = 1) { // выводим текущий слайд в счетчик\r\n      if (slides.length < 10) {\r\n         current.textContent = `0${curr}`;\r\n      } else {\r\n         current.textContent = curr;\r\n      }\r\n   }\r\n\r\n   function showDots(dots) {  // формируем точки навигации слайдера\r\n      dots.forEach(dot => dot.style.opacity = '0.5');\r\n      dots[slideIndex - 1].style.opacity = 1;\r\n   }\r\n   function clearValue(val) { // преобразовываем символьное значение в рх в число\r\n      return +val.replace(/\\D/g, '');\r\n   } \r\n   \r\n   slidesField.style.width = 100 * slides.length + '%';\r\n   slidesField.style.display = 'flex';\r\n   slidesField.style.transition = '0.5s all';\r\n   slidesWrapper.style.overflow = 'hidden';\r\n   \r\n   slides.forEach(slide => {\r\n      slide.style.width = width;\r\n   });\r\n   // установка начальных значений счетчика\r\n   if (slides.length < 10) {\r\n      total.textContent = `0${slides.length}`;\r\n      current.textContent = `0${slideIndex}`;\r\n   } else {\r\n      total.textContent = slides.length;\r\n      current.textContent = slideIndex;\r\n   }\r\n\r\n   slider.style.position = 'relative';\r\n   //обертка для навигации (точек) \r\n   const indicators = document.createElement('ol'),\r\n         dots = []; // массив с точками\r\n      \r\n   indicators.classList.add('carousel-indicators');\r\n   slider.append(indicators);\r\n   //формируем точки\r\n   for (let i = 0; i < slides.length; i++) {\r\n      const dot = document.createElement('li');\r\n      dot.setAttribute('data-slide-to', i + 1);\r\n      dot.classList.add('dot');\r\n      if (i == 0) {\r\n         dot.style.opacity = 1;\r\n      }\r\n      indicators.append(dot);\r\n      dots.push(dot);\r\n   }\r\n\r\n   next.addEventListener('click', () => {\r\n      // offset - задает смещение ленты слайдов для показа текущего\r\n      //if (offset == +width.replace(/\\D/g, '') * (slides.length - 1)) {\r\n         if (offset == clearValue(width) * (slides.length - 1)) {\r\n         offset = 0;\r\n      } else {\r\n         offset += clearValue(width);\r\n      }\r\n      // выполняем смещение\r\n      slidesField.style.transform = `translateX(-${offset}px)`;\r\n      if (slideIndex == slides.length) {\r\n         slideIndex = 1;\r\n      } else {\r\n         slideIndex++;\r\n      }\r\n      showCounterSlide(slideIndex);\r\n      showDots(dots);\r\n   });\r\n   prev.addEventListener('click', () => {\r\n      if (offset == 0) {\r\n         offset = clearValue(width) * (slides.length - 1);\r\n      } else {\r\n         offset -= clearValue(width);\r\n      }\r\n      slidesField.style.transform = `translateX(-${offset}px)`;\r\n      if (slideIndex == 1) {\r\n         slideIndex = slides.length;\r\n      } else {\r\n         slideIndex--;\r\n      }\r\n      showCounterSlide(slideIndex);\r\n      showDots(dots);\r\n   });\r\n   // функционал клика на точку \r\n   dots.forEach(dot => {\r\n      dot.addEventListener('click', (e) => {\r\n         const slideTo = e.target.getAttribute('data-slide-to');\r\n         slideIndex = slideTo; // изменяем счетчик на текущий слайд\r\n         // расчитываем смещение\r\n         offset = +width.replace(/\\D/g, '') * (slideTo - 1);\r\n         // делаем сдвиг карусели слайдов\r\n         slidesField.style.transform = `translateX(-${offset}px)`;\r\n         // ставим ведущий 0 и выводим счетчик\r\n         showCounterSlide(slideIndex);\r\n         showDots(dots);\r\n      });\r\n   });\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tebsContentSelector, tabsParentSelector, activeClass)   {\r\n// Tabs\r\n   const tabs = document.querySelectorAll(tabsSelector),\r\n   tabsContent = document.querySelectorAll(tebsContentSelector),\r\n   tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n   // сначала скроем все табы\r\n   function hideTabContent() {\r\n      tabsContent.forEach(item => {\r\n         item.classList.add('hide');  // с использованием классов\r\n         item.classList.remove('show', 'fade');  // с использованием классов\r\n      });\r\n      // уберем клас active\r\n      tabs.forEach(item => {\r\n         //работаем в списке класа, .(точка) перед названием класса не нужна \r\n         item.classList.remove(activeClass);\r\n      })\r\n   }\r\n   // добавление таба в  контент, i - номер таба в списке\r\n   function showTabContent(i = 0) {\r\n      //tabsContent[i].style.display = 'block'; // с использование стилей\r\n      tabsContent[i].classList.add('show', 'fade'); // с использованием классов + add animation\r\n      tabsContent[i].classList.remove('hide'); // с использованием классов\r\n      tabs[i].classList.add(activeClass);\r\n   } \r\n   hideTabContent();\r\n   showTabContent();\r\n\r\n   tabsParent.addEventListener('click', (event) => {\r\n      const target = event.target;\r\n\r\n      if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n         tabs.forEach((item, i) => {\r\n            if (target == item) {\r\n               hideTabContent();\r\n               showTabContent(i);\r\n            }\r\n         })\r\n      }\r\n   });\r\n}\r\n\r\nexport default tabs; ","function timer(id, deadLine) {\r\n   // Timer\r\n \r\n   // функция определения времени м-у текущим и дедлайном\r\n   function getTimeRemaining(endtime) {\r\n      let days, hours, minutes, seconds;\r\n      const t = Date.parse(endtime) - Date.parse(new Date());\r\n\r\n      if (t <= 0) { // если дата прошла\r\n         days = 0;\r\n         hours = 0;\r\n         minutes = 0;\r\n         seconds = 0;\r\n      } else {\r\n         days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n         hours = Math.floor(((t / (1000 * 60 * 60)) % 24)-3),\r\n         minutes = Math.floor((t / 1000 / 60) % 60),\r\n         seconds = Math.floor((t / 1000) % 60);\r\n      }\r\n      return {\r\n         'total': t,\r\n         'days': days,\r\n         'hours': hours,\r\n         'minutes': minutes,\r\n         'seconds': seconds\r\n      }\r\n   }\r\n   //функция добавления первого нуля для одноцифровых значений\r\n   function getZero(num) {\r\n      if (num >= 0 && num < 10) {\r\n         return `0${num}`;\r\n      } else {\r\n         return num;\r\n      }\r\n   }\r\n\r\n   // функция установки значений в таймере\r\n   function setClock(selector, endtime) {\r\n      const timer = document.querySelector(selector),\r\n         days = timer.querySelector('#days'),\r\n         hours = timer.querySelector('#hours'),\r\n         minutes = timer.querySelector('#minutes'),\r\n         seconds = timer.querySelector('#seconds'),\r\n         timeInterval = setInterval(updateClock, 1000);\r\n   \r\n      updateClock();  // разовый запуск установки реальных значений при загрузке страницы\r\n      // обновление таймера\r\n      function updateClock() {\r\n         const t = getTimeRemaining(endtime);\r\n\r\n         days.innerHTML = getZero(t.days);\r\n         hours.innerHTML = getZero(t.hours);\r\n         minutes.innerHTML = getZero(t.minutes);\r\n         seconds.innerHTML = getZero(t.seconds);\r\n      //  проверка или таймер не закончился\r\n         if (t.total <= 0) {\r\n            clearInterval(timeInterval);\r\n         }\r\n      }\r\n   } \r\n   setClock(id, deadLine);\r\n}\r\nexport default timer;","// выводим fetch в отдельную функцию для отправки данных   \r\nconst postData = async (url, data) => {\r\n   const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-type': 'application/json'\r\n      },\r\n      body: data\r\n   });\r\n   // возвращаем промис res в json формате \r\n   return await res.json();\r\n};\r\n\r\nasync function getResource(ulr) {\r\n   let res = await fetch(ulr);\r\n   if (!res.ok) {\r\n      throw new Error(`Could not fetch ${ulr}, status: ${res.status}`);\r\n   }\r\n   return await res.json();\r\n}\r\n\r\nexport { postData };\r\nexport { getResource };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\n\r\nimport calculator from './modules/calculator';\r\nimport cards from './modules/cards';\r\nimport modalwind from './modules/modalwind';\r\nimport slider from './modules/slider';\r\nimport tabs from './modules/tabs';\r\nimport timer from './modules/timer';\r\nimport form from './modules/form';\r\nimport { openModal } from './modules/modalwind';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n   // Устанавливаем вывод модального окна после заданого времени открытия сайта пользователем 10с.\r\n   const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 10000);\r\n\r\n   tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n   timer('.timer', '2023-06-20');\r\n   cards();\r\n   modalwind('[data-modal]', '.modal', modalTimerId);\r\n   calculator();\r\n   slider({\r\n      container: '.offer__slider',\r\n      nextArrow: '.offer__slider-next',\r\n      slide: '.offer__slide',\r\n      prevArrow: '.offer__slider-prev',\r\n      totalCounter: '#total',\r\n      currentCounter: '#current',\r\n      wrapper: '.offer__slider-wrapper',\r\n      field:'.offer__slider-inner'\r\n   });\r\n   form('form', modalTimerId);\r\n   \r\n});\r\n"],"names":[],"sourceRoot":""}